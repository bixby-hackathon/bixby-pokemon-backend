{"version":3,"sources":["../src/index.js"],"names":["app","server","http","createServer","use","exposedHeaders","config","corsHeaders","bodyParser","urlencoded","extended","json","get","request","response","sendFile","path","resolve","__dirname","listen","process","env","PORT","port","console","log","address"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAIA,MAAM,wBAAV;AACAA,IAAIC,MAAJ,GAAaC,eAAKC,YAAL,CAAkBH,GAAlB,CAAb;;AAEA;AACAA,IAAII,GAAJ,CAAQ,sBAAO,KAAP,CAAR;;AAEA;AACAJ,IAAII,GAAJ,CACE,oBAAK;AACHC,kBAAgBC,iBAAOC;AADpB,CAAL,CADF;;AAMAP,IAAII,GAAJ,CAAQI,qBAAWC,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;AACAV,IAAII,GAAJ,CAAQ,0BAAW,EAAEE,wBAAF,EAAX,CAAR;AACAN,IAAII,GAAJ,CAAQI,qBAAWG,IAAX,EAAR;;AAEA;AACAX,IAAII,GAAJ,CAAQ,UAAR,EAAoB,uBAAQ,EAAEE,wBAAF,EAAR,CAApB;;AAEAN,IAAIY,GAAJ,CAAQ,GAAR,EAAa,UAASC,OAAT,EAAkBC,QAAlB,EAA4B;AACvCA,WAASC,QAAT,CAAkBC,eAAKC,OAAL,CAAaC,SAAb,EAAwB,IAAxB,EAA8B,aAA9B,CAAlB;AACD,CAFD;;AAIAlB,IAAIC,MAAJ,CAAWkB,MAAX,CAAkBC,QAAQC,GAAR,CAAYC,IAAZ,IAAoBhB,iBAAOiB,IAA7C,EAAmD,YAAM;AACvDC,UAAQC,GAAR,sBAA+BzB,IAAIC,MAAJ,CAAWyB,OAAX,GAAqBH,IAApD;AACD,CAFD;;kBAIevB,G","file":"index.js","sourcesContent":["import http from 'http';\nimport express from 'express';\nimport session from 'express-session';\nimport cors from 'cors';\nimport morgan from 'morgan';\nimport bodyParser from 'body-parser';\nimport middleware from './middleware';\nimport config from './config.json';\nimport path from 'path';\nimport pokemon from './api/pokemon';\n\nlet app = express();\napp.server = http.createServer(app);\n\n// logger\napp.use(morgan('dev'));\n\n// 3rd party middleware\napp.use(\n  cors({\n    exposedHeaders: config.corsHeaders,\n  }),\n);\n\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(middleware({ config }));\napp.use(bodyParser.json());\n\n// api router\napp.use('/pokemon', pokemon({ config }));\n\napp.get('*', function(request, response) {\n  response.sendFile(path.resolve(__dirname, './', 'signin.html'));\n});\n\napp.server.listen(process.env.PORT || config.port, () => {\n  console.log(`Started on port ${app.server.address().port}`);\n});\n\nexport default app;\n"]}